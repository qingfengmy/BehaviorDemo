<?xml version="1.0" encoding="utf-8"?>
<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:id="@+id/main_content"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="true">

    <android.support.design.widget.AppBarLayout
        android:id="@+id/appbar"
        android:layout_width="match_parent"
        android:layout_height="256dp"
        android:fitsSystemWindows="true"
        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar">
        <!--
        Collapsing 折叠 其父类是FrameLayout
        CollapsingToolbarLayout可实现Toolbar的折叠效果。
        CollapsingToolbarLayout 提供以下属性和方法是用：
1. Collapsing title：ToolBar的标题，当CollapsingToolbarLayout全屏没有折叠时，
    title显示的是大字体，在折叠的过程中，title不断变小到一定大小的效果。你可以调用setTitle(CharSequence)方法设置title。
2. Content scrim：ToolBar被折叠到顶部固定时候的背景，
    你可以调用setContentScrim(Drawable)方法改变背景或者 在属性中使用 app:contentScrim=”?attr/colorPrimary”来改变背景。
3. Status bar scrim：状态栏的背景，调用方法setStatusBarScrim(Drawable)。还没研究明白，不过这个只能在Android5.0以上系统有效果。
4. Parallax scrolling children：
    CollapsingToolbarLayout滑动时，子视图的视觉差，可以通过属性app:layout_collapseParallaxMultiplier=”0.6”改变。值de的范围[0.0,1.0]，值越大视察越大。
5. CollapseMode ：子视图的折叠模式，在子视图设置，有两种
    “pin”：固定模式，在折叠的时候最后固定在顶端；
    “parallax”：视差模式，在折叠的时候会有个视差折叠的效果。我们可以在布局中使用属性app:layout_collapseMode=”parallax”来改变。
 -->
        <android.support.design.widget.CollapsingToolbarLayout
            android:id="@+id/collapsing_toolbar"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:fitsSystemWindows="true"
            app:contentScrim="?attr/colorPrimary"
            app:expandedTitleMarginEnd="64dp"
            app:expandedTitleMarginStart="48dp"
            app:layout_scrollFlags="scroll|exitUntilCollapsed">

            <ImageView
                android:id="@+id/backdrop"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:fitsSystemWindows="true"
                android:scaleType="centerCrop"
                android:src="@mipmap/ic_launcher"
                app:layout_collapseMode="parallax" />

            <android.support.v7.widget.Toolbar
                android:id="@+id/toolbar"
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                app:layout_collapseMode="pin"
                app:popupTheme="@style/ThemeOverlay.AppCompat.Light" />

        </android.support.design.widget.CollapsingToolbarLayout>

    </android.support.design.widget.AppBarLayout>

    <android.support.v4.widget.NestedScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:layout_behavior="@string/appbar_scrolling_view_behavior">


        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_margin="10dp"
            android:text="如果 生命的主角并不是我\n这一生也许匆匆走过\n也不必想太多\n如果 我没有想过为谁而活\n岁月只会消磨\n梦 总不会结果\n如果 逆耳的忠言是为了我\n那怕你说的是我的错\n我也不要你沉默\n如果 混乱跟争纷会演成祸\n除非不能解脱\n我 最爱是平和\n但 我到底是我\n坚守我的承诺\n历史没有如果\n只有看我将怎么做\n看 这锦绣山河\n给我已经很多\n让我全心全意\n把这土地建成理想国\n如果 逆耳的忠言是为了我\n那怕你说的是我的错\n我也不要你沉默\n如果 混乱跟争纷会演成祸\n除非不能解脱\n我 最爱是平和\n但 我到底是我\n坚守我的承诺\n历史没有如果\n只有看我将怎么做\n看 这锦绣山河\n给我已经很多\n让我全心全意\n把这土地建成理想国\n从历史中学每一课\n到今天该如何\n过去的事不能再从头如果\n未来却不能错\n因 我到底是我\n坚守我的承诺\n历史没有如果\n只有看我将怎么做\n看 这锦绣山河\n给我已经很多\n让我全心全意\n把这土地建成理想国\n让我全心全意\n把这土地建成理想国" />


    </android.support.v4.widget.NestedScrollView>
<!--

CoordinatorLayout 还提供了一个 layout_anchor 的属性，
连同 layout_anchorGravity 一起，可以用来放置与其他视图关联在一起的悬浮视图（如 FloatingActionButton）。
本例中使用FloatingActionButton。

-->
    <android.support.design.widget.FloatingActionButton
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_margin="@dimen/activity_horizontal_margin"
        android:clickable="true"
        android:src="@android:drawable/ic_menu_send"
        app:layout_anchor="@id/appbar"
        app:layout_anchorGravity="bottom|right|end" />
</android.support.design.widget.CoordinatorLayout>